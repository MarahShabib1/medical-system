// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

namespace Project.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200923192749_e")]
    partial class e
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project.Models.Doctor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<int>("Userid");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("doctor");
                });

            modelBuilder.Entity("Project.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("Doctorid");

                    b.Property<int>("Userid");

                    b.HasKey("id");

                    b.HasIndex("Doctorid");

                    b.HasIndex("Userid");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Project.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("Userid");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Project.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("Login");

                    b.Property<string>("email");

                    b.Property<string>("phonenumber");

                    b.Property<string>("pwd");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Project.Models.Doctor", b =>
                {
                    b.HasOne("Project.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Project.Models.Employee", b =>
                {
                    b.HasOne("Project.Models.Doctor", "doctor")
                        .WithMany()
                        .HasForeignKey("Doctorid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Project.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Project.Models.Role", b =>
                {
                    b.HasOne("Project.Models.User")
                        .WithMany("Roles")
                        .HasForeignKey("Userid");
                });
#pragma warning restore 612, 618
        }
    }
}
